(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{Xv:()=>m,f8:()=>i,Zu:()=>a,Ie:()=>s,F4:()=>r});let t=()=>{a.forEach((function(e){let t=a.indexOf(e);e.addEventListener("click",(function(){console.log(r[t]),r[t].style.display="block",m[t].style.display="block",e.style.display="none"}))})),m.forEach((function(e){let t=m.indexOf(e);e.addEventListener("click",(function(){console.log(r[t]),r[t].style.display="none",a[t].style.display="block",e.style.display="none"}))}))},n=e=>{if(""!==e){let n=new l(e,0);n.addProject();let o=document.getElementById("container"),d=document.createElement("div"),c=document.createElement("h2"),i=document.createElement("h4");i.setAttribute("id",`${n.title}TodosCount`);let s=document.createElement("img"),u=document.createElement("img"),y=document.createElement("div");s.src="icons/angle-small-right.svg",u.src="icons/angle-small-down.svg",c.textContent=n.title,i.textContent=`${n.todosNumber} Todos in this project`,o.appendChild(d),d.setAttribute("id",`${c.textContent}`),d.appendChild(y),y.appendChild(c),y.appendChild(i),y.appendChild(s),y.appendChild(u),s.classList.add("show"),a.push(s),u.classList.add("close"),m.push(u),y.classList.add("projectTitleDiv");let p=document.createElement("div");p.classList.add("todosContainer"),r.push(p),d.appendChild(p),t()}},o=(e,t,n)=>{if(""!=e&&""!=t){let o=new d(e,t,n),l=document.createElement("div");l.classList.add("todoDiv"),l.setAttribute("id",`${o.id}`);let c=document.createElement("h3"),s=document.createElement("div");s.classList.add("todoTitleDiv"),c.textContent=o.title,l.appendChild(s),s.appendChild(c),o.addTodo(),i.forEach((function(e){t===e.title&&(document.getElementById(`${e.title}`).lastChild.appendChild(l),e.todosNumber+=1,e.todoCount())}));let a=document.createElement("button");a.classList.add("add"),a.textContent="Add",s.appendChild(a),o.add=a,o.addAttribute()}};class d{constructor(e,t,n,o,d,l,c,i,s){this.title=e,this.projectParent=t,this.id=n,this.description=o,this.dueDate=d,this.priority=l,this.notes=c,this.checklist=i,this.add=s}addTodo(){s.push(this)}addAttribute(){this.add.onclick=()=>{document.getElementById("addAttributeForm").style.display="flex"}}}class l{constructor(e,t){this.title=e,this.todosNumber=t}addProject(){i.push(this)}todoCount(){console.log(this),document.getElementById(`${this.title}TodosCount`).textContent=`${this.todosNumber} Todos in this project`}}let c=0,i=[],s=[],a=[...document.getElementsByClassName("show")],m=[...document.getElementsByClassName("close")],r=[...document.getElementsByClassName("todosContainer")];document.getElementById("createProject").onclick=()=>{let e=document.getElementById("projectTitle").value;n(e),document.getElementById("newProjectForm").style.display="none",document.getElementById("container").style.opacity="1"},document.getElementById("createTodo").onclick=()=>{let e=document.getElementById("todoTitle").value,t=document.getElementById("projectParent").value;o(e,t,c),++c,document.getElementById("newTodoForm").style.display="none",document.getElementById("container").style.opacity="1"},document.getElementById("addAttribute").onclick=()=>{let e=document.getElementById("descriptionAttribute").value,t=document.getElementById("priorityAttribute").value;addAttributes(e,t),document.getElementById("newTodoForm").style.display="none",document.getElementById("container").style.opacity="1"},[...document.getElementsByClassName("closeButton")].forEach((function(e){e.onclick=()=>{document.getElementById("newTodoForm").style.display="none",document.getElementById("newProjectForm").style.display="none",document.getElementById("addAttributeForm").style.display="none",document.getElementById("container").style.opacity="1"}})),document.getElementById("newProject").onclick=()=>{document.getElementById("newTodoForm").style.display="none",document.getElementById("newProjectForm").style.display="flex",document.getElementById("container").style.opacity="0.4"},document.getElementById("newTodo").onclick=()=>{document.getElementById("newProjectForm").style.display="none",document.getElementById("newTodoForm").style.display="flex",document.getElementById("container").style.opacity="0.4"},t(),o(),n("Default")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
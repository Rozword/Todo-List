(()=>{"use strict";class e{constructor(e,t,n,d,o,l,c){this.title=e,this.id=t,this.description=n,this.dueDate=d,this.priority=o,this.notes=l,this.checklist=c}}class t{constructor(e,t){this.clicked=e,this.id=t}}let n,d=[],o=[],l=0,c=()=>{let e=document.getElementById("addFeaturesForm");[...document.getElementsByClassName("addFeatures")].forEach((function(t){t.addEventListener("click",(function(){n=parseInt(this.parentNode.children[0].textContent),o[parseInt(n)].clicked=!0,console.log(o[parseInt(n)].clicked),console.log(n),console.log(this.parentNode.children[0].textContent),e.style.display="flex"}))}))};(()=>{let e=document.getElementById("addProjectForm");document.getElementById("addProject").addEventListener("click",(function(){e.style.display="flex"})),document.getElementById("closeProjectButton").addEventListener("click",(function(){e.style.display="none"})),document.getElementById("enterProjectTitle").addEventListener("click",(function(){let t=document.getElementById("projectsList"),n=document.getElementById("projectTitle"),d=document.createElement("div"),o=document.createElement("p");o.textContent=n.value,d.classList.add("projectDiv"),o.classList.add("project"),t.appendChild(d),d.appendChild(o),e.style.display="none",n.value=""}))})(),(()=>{let n=document.getElementById("addTodoForm"),s=document.getElementById("addTodo"),i=document.getElementById("closeTodoButton"),a=document.getElementById("enterTodoTitle");s.addEventListener("click",(function(){n.style.display="flex"})),i.addEventListener("click",(function(){n.style.display="none"})),a.addEventListener("click",(function(){let s=[...document.getElementsByClassName("project")],i=document.getElementById("todoTitle"),a=document.getElementById("projectChoice");console.log(a.value),s.forEach((function(c){if(console.log(c),console.log(c.textContent),c.textContent===a.value){console.log(c),console.log(c.textContent);let s=new e(i.value,l),u=new t(!1,l),m=document.createElement("div"),r=document.createElement("div"),p=document.createElement("div");p.setAttribute("id",`${l}`),p.textContent=l,r.classList.add("todoDiv");let E=document.createElement("button");E.textContent="+",E.classList.add("addFeatures"),m.textContent=s.title,m.classList.add("todo"),c.parentNode.appendChild(r),r.appendChild(p),r.appendChild(m),r.appendChild(E),p.style.display="none",n.style.display="none",console.log(s),i.value="",a.value="",d.push(s),console.log(d),o.push(u),l++}})),c()}))})(),c(),(()=>{let e=document.getElementById("enterFeatures"),t=document.getElementById("addFeaturesForm");document.getElementById("closeFeaturesButton").addEventListener("click",(function(){t.style.display="none"})),e.addEventListener("click",(function(e){let t=[...document.getElementsByClassName("todo")];document.getElementsByClassName("addFeatures");for(let e=0;e<=t.length;e++){let o=document.getElementById(`${e}`),l=d.find((e=>e.id===n));if(console.log(n),console.log(l),parseInt(o.textContent)===n){console.log(l.title),console.log(t[e].textContent),l.description=document.getElementById("description").value,l.dueDate=document.getElementById("dueDate").value,l.notes=document.getElementById("notes").value;let n=document.createElement("div");n.textContent=l.description;let d=document.createElement("div");d.textContent=l.dueDate;let c=document.createElement("div");c.textContent=l.notes;let s=document.createElement("div");s.classList.add("featuresDiv"),o.parentNode.insertBefore(s,o.parentNode.children[2]),s.appendChild(n),s.appendChild(d),s.appendChild(c);break}}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,